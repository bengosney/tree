{"version":3,"sources":["Noise.js","Context.js","noisyLine.js","Tree.js","App.js","serviceWorker.js","index.js"],"names":["Noise","length","range","arguments","undefined","radius","seed","Object","classCallCheck","this","noise","OpenSimplexNoise","Date","now","Math","random","a","r","start","findStart","reset","value","r1","r2","PI","y1","y2","y","theta","atan2","prev","get","smallestAngle","Number","MAX_SAFE_INTEGER","bestStart","i","cur","angle","abs","step","x","cos","sin","scale","noise2D","Context","ctx","height","width","OffscreenCanvas","getContext","noisyLine","x1","x2","f","sqrt","getAngle","noiseShape","noiseDetail","floor","yOffset","amplitude","setRange","frequency","setRadius","cx","cy","radians","ax","ay","callback","moveTo","n","_x","_y","_this$rotate","rotate","lineTo","Tree","getLength","randomRange","min","max","drawLimb","level","line","beginPath","draw","strokeStyle","lineWidth","stroke","_draw","aMod","tx","ty","nx","ny","limbs","diff","App","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","pixelSize","lenth","drawing","updateWindowDimensions","bind","assertThisInitialized","startts","getTS","_this2","canvas","refs","set","alpha","rAF","requestAnimationFrame","updateAnimationState","window","addEventListener","_this3","_window","innerWidth","innerHeight","setState","initObjects","nextFrame","cancelAnimationFrame","removeEventListener","ts","clearFrame","_this$state","grd","createRadialGradient","addColorStop","fillStyle","fillRect","getTime","_this$state2","renderElements","tree","push","map","e","_this$state3","react_default","createElement","ref","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.825c5e02.chunk.js","sourcesContent":["import OpenSimplexNoise from 'open-simplex-noise';\r\n\r\nclass Noise {\r\n    constructor(length, range = [1, 100], radius = 2, seed = null) {\r\n\tthis.noise = new OpenSimplexNoise(seed || Date.now() + Math.random());\r\n\tthis.length = length;\r\n\tthis.a = 0;\r\n\tthis.range = range;\r\n\tthis.r = radius;\r\n\r\n\tthis.start = null;\r\n\t\r\n\tthis.findStart();\r\n\tthis.reset();\r\n    }\r\n\r\n    setRange(range) {\r\n\tthis.range = range;\r\n    }\r\n\r\n    setRadius(radius) {\r\n\tthis.radius = radius;\r\n    }\r\n\r\n    scale( value, r1, r2 ) { \r\n\treturn (value - r1[0]) * (r2[1] - r2[0]) / (r1[1] - r1[0]) + r2[0];\r\n    }\r\n\r\n    reset() {\r\n\tthis.a = this.start;\r\n    }\r\n\r\n    step() {\r\n\treturn (Math.PI * 2) / this.length;\r\n    }\r\n\r\n    angle(y1, y2) {\r\n\tconst y = y1 - y2;\r\n\tconst x = 10;\r\n\tlet theta = Math.atan2(y, x);\r\n\ttheta *= 180 / Math.PI;\r\n\r\n\treturn theta;\r\n    }\r\n\r\n    findStart() {\r\n\t// TODO: Make this better, I think it needs to look over more points\r\n\tif (this.start === null) {\r\n\t    let prev = this.get();\r\n\t    \r\n\t    let smallestAngle = Number.MAX_SAFE_INTEGER;\r\n\t    let bestStart = 0;\r\n\t    \r\n\t    for (let i = 0 ; i < this.length ; i++) {\r\n\t\tconst cur = this.get();\r\n\t\tconst angle = Math.abs(this.angle(prev, cur));\r\n\t\t\r\n\t\tif (angle < smallestAngle) {\r\n\t\t    smallestAngle = angle;\r\n\t\t    bestStart = this.a  - (this.step() * 2);\r\n\t\t}\r\n\t\t\r\n\t\tprev = cur;\r\n\t    }\r\n\t    \r\n\t    this.start = bestStart;\r\n\t}\r\n    }\r\n\r\n    get() {\r\n\tconst step = this.step();\r\n\t\r\n\tconst { r, a } = this;\r\n\tconst x = r * Math.cos(a);\r\n\tconst y = r * Math.sin(a);\r\n\r\n\tthis.a += step;\r\n\r\n\treturn this.scale(this.noise.noise2D(x, y), [0, 1], this.range);\r\n    }\r\n}\r\n\r\n\r\nexport default Noise;\r\n","class Context {\n    static get() {\n\treturn this.ctx;\n    }\n\n    static set(ctx) {\n\tthis.ctx = ctx;\n    }\n\n    static getOffscreen(height, width) {\n\tconst oc = new OffscreenCanvas(height, width);\n\n\treturn oc.getContext('2d');\n    }\n}\n\nContext.ctx = null;\n\nexport default Context;\n","import Noise from './Noise';\r\nimport Context from './Context';\r\n\r\nclass noisyLine {\r\n    constructor(x1, y1, x2, y2,  a = 100, f = 2) {\r\n\tconst x = x1 - x2;\r\n\tconst y = y1 - y2;\r\n\r\n\tthis.length = Math.abs(Math.sqrt( x*x + y*y ));\r\n\tthis.angle = this.getAngle(x1, y1, x2, y2);\r\n\r\n\tthis.noiseShape = new Noise(this.length, [0, a], f);\r\n\tthis.noiseDetail = new Noise(this.length, [0, Math.floor(a/5)], Math.floor(f * 5));\r\n\r\n\tthis.x1 = x1;\r\n\tthis.y1 = y1;\r\n\tthis.x2 = x2;\r\n\tthis.y2 = y2;\r\n\r\n\tthis.yOffset = null;\r\n    }\r\n\r\n    setAmplitude(amplitude) {\r\n\tthis.noise.setRange([0, amplitude]);\r\n    }\r\n\r\n    setFrequency(frequency) {\r\n\tthis.noise.setRadius(frequency);\r\n    }\r\n\r\n    getAngle(x1, y1, x2, y2) {\r\n\tconst y = y1 - y2;\r\n\tconst x = x1 - x2;\r\n\tconst theta = Math.atan2(x, y) * (180 /Math.PI);\r\n\r\n\treturn theta + 90;\r\n    }\r\n\r\n    rotate(cx, cy, x, y, angle) {\r\n\tconst radians = (Math.PI / 180) * angle;\r\n        const cos = Math.cos(radians);\r\n        const sin = Math.sin(radians);\r\n\t\r\n        const ax = (cos * (x - cx)) + (sin * (y - cy)) + cx;\r\n        const ay = (cos * (y - cy)) - (sin * (x - cx)) + cy;\r\n\t\r\n\treturn {ax: ax, ay: ay};\r\n    }\r\n    \r\n    draw(callback = null) {\r\n\tconst ctx = Context.get();\r\n\tconst { noiseShape, noiseDetail, x1, y1 } = this;\r\n\tconst y = y1;\r\n\r\n\t\r\n\tnoiseShape.reset();\r\n\tnoiseDetail.reset();\r\n\tctx.moveTo(x1, y1);\r\n\r\n\tlet yOffset = null;\r\n\t\r\n\tfor (let x = 0 ; x <= this.length; x++) {\r\n\t    const n = noiseShape.get() + noiseDetail.get();\r\n\t    yOffset = yOffset || n;\t  \r\n\t    \r\n\t    const _x = x + x1;\r\n\t    const _y = (y + n) - yOffset;\r\n\t    const { ax, ay } = this.rotate(x1, y1, _x, _y, this.angle);\r\n\t    ctx.lineTo(ax, ay);\r\n\r\n\t    if (callback !== null) {\r\n\t\tcallback(ax, ay);\r\n\t    }\r\n\t}\r\n    }\r\n}\r\n\r\nexport default noisyLine;\r\n","import Context from './Context';\nimport noisyLine from './noisyLine';\n\nclass Tree {\n    constructor(x, y, width, height) {\n\tthis.x = x;\n\tthis.y = y;\n\tthis.width = width;\n\tthis.height = height;\n    }\n\n    draw() {\n\tconst { x, y, width, height } = this;\n\tconst ctx = Context.get();\n\n\tlet cx = x;\n\tlet cy = y;\n\n\tconst maxLevels = 5;\n\n\tconst getLength = (x1, y1, x2, y2) => {\n\t    const x = x1 - x2;\n\t    const y = y1 - y2;\n\t    \n\t    return Math.abs(Math.sqrt( x*x + y*y ));\n\t};\n\n\tconst randomRange = (min, max) => {\n\t    return min + Math.random() * (max - min);\n\t};\n\n\tconst getAngle = (x1, y1, x2, y2) => {\n\t    const y = y1 - y2;\n\t    const x = x1 - x2;\n\t    const theta = Math.atan2(x, y) * (180 / Math.PI);\n\t    \n\t    return theta + 90;\n\t};\n\n\tconst scale = (value, r1, r2) => { \n\t    return (value - r1[0]) * (r2[1] - r2[0]) / (r1[1] - r1[0]) + r2[0];\n\t};\n\n\tconst s = .45;\n\n\tconst drawLimb = (x1, y1, x2, y2, level = 0) => {\n\t    const length = getLength(x1, y1, x2, y2);\n\t    const line = new noisyLine(x1, y1, x2, y2, 10, (length / 500));\n\n\t    ctx.beginPath();\n\t    line.draw();\n\t    ctx.strokeStyle = '#3d3d3d';\n\t    ctx.lineWidth = maxLevels - level;\n\t    ctx.stroke();\n\n\t    \n\t    if (level !== maxLevels) {\n\t\tconst _draw = (aMod) => {\n\t\t    const cx = x2;\n\t\t    const cy = y2;\n\t\t    const length = getLength(x1, y1, x2, y2) * (s + randomRange(0, .2));\n\t\t    \n\t\t    const tx = x2;\n\t\t    const ty = y2 + (length * randomRange(1, .5));\n\t\t    const ca = getAngle(x1, y1, x2, y2);\n\t\t    const a = ((ca - 90) + aMod + randomRange(-15, 15)) * (Math.PI / 180);\n\t\t    const nx = Math.cos(a) * (tx - cx) - Math.sin(a) * (ty - cy) + cx;\n\t\t    const ny = Math.sin(a) * (tx - cx) - Math.cos(a) * (ty - cy) + cy;\n\n\t\t    drawLimb(cx, cy, nx, ny, level + 1);\n\t\t};\n\n\t\tconst m = .2;\n\n\t\tconst limbs = randomRange(2, 5);\n\t\tconst diff = 90 / (limbs - 1);\n\t\tfor (let i = 0 ; i < limbs ; i++) {\n\t\t    const a = -45 + (diff * i) * randomRange(1 + m, 1 - m);\n\t\t    _draw(a);\n\t\t}\n\t    }\n\t};\n\n\t\n\tdrawLimb(cx, cy, cx, cy - (height * s));\n    }    \n}\n\nexport default Tree;\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport Noise from './Noise';\r\nimport Colour from './Colour';\r\nimport Tree from './Tree';\r\n\r\nimport Context from './Context';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n\tsuper(props);\r\n\r\n\tthis.state = {\r\n\t    pixelSize: 8,\r\n\t    height: 500,\r\n\t    width: 150,\r\n\t    lenth: 100,\r\n\t    range: 20,\r\n\t    yOffset: null\t    \r\n\t};\r\n\t\r\n\tthis.drawing = false;\r\n\tthis.ctx = null;\r\n\tthis.line = \r\n\r\n\tthis.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n\tthis.startts = this.getTS();\r\n    }\r\n\r\n    \r\n    componentDidMount() {\r\n\tconst canvas = this.refs.canvas;\r\n\tContext.set(canvas.getContext(\"2d\", { alpha: false }));\r\n\r\n\t\r\n\tthis.rAF = requestAnimationFrame(() => this.updateAnimationState());\r\n\tthis.updateWindowDimensions();\r\n\twindow.addEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n    \r\n    updateWindowDimensions() {\r\n\tconst { innerWidth, innerHeight } = window;\r\n\tconst { range } = this.state;\r\n\r\n\tconst length = Math.floor(innerWidth / 2);\r\n\tconst noise = new Noise(length, [-range, range]);\r\n\r\n\tthis.setState({ width: innerWidth, height: innerHeight, noise: noise, length: length }, () => {\r\n\t    this.initObjects();\r\n\t    this.nextFrame();\r\n\t});\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n\tcancelAnimationFrame(this.rAF);\r\n\twindow.removeEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n\r\n    updateAnimationState() {\r\n\tthis.ts = this.getTS();\r\n\tthis.clearFrame();\r\n\r\n\tthis.draw();\r\n\t\t\r\n\tthis.nextFrame();\r\n    }\r\n\r\n    nextFrame() {\r\n\t//this.rAF = requestAnimationFrame(() => this.updateAnimationState());\r\n    }\r\n\r\n    clearFrame() {\r\n\tconst { width, height } = this.state;\r\n\tconst ctx = Context.get();\r\n\r\n\tconst light = '#d1f2e8';\r\n\tconst dark = '#6d7580';\r\n\r\n\t//const grd = ctx.createLinearGradient(0, height, 0, 0);\r\n\tconst grd = ctx.createRadialGradient(0, 0, width, width / 2, height / 2, 0);\r\n\tgrd.addColorStop(1, light);\r\n\tgrd.addColorStop(0, dark);\r\n\t\r\n\tctx.fillStyle = grd;\r\n\tctx.fillRect(0, 0, width, height);\r\n    }\r\n\r\n    getTS() {\r\n\tconst date = new Date();\r\n\t\r\n\treturn date.getTime();\r\n    }\r\n\r\n    scale( value, r1, r2 ) { \r\n\treturn ( value - r1[ 0 ] ) * ( r2[ 1 ] - r2[ 0 ] ) / ( r1[ 1 ] - r1[ 0 ] ) + r2[ 0 ];\r\n    }\r\n\r\n    initObjects() {\r\n\tconst { width, height } = this.state;\r\n\r\n\tconst renderElements = [];\r\n\r\n\tconst tree = new Tree(width / 2, height * .9, width * .8, height * .8);\r\n\r\n\trenderElements.push(tree);\r\n\t\r\n\tthis.renderElements = renderElements;\r\n    }\r\n\r\n    draw() {\r\n\tthis.renderElements.map(e => e.draw());\r\n    }\r\n        \r\n    render() {\r\n\tconst { width, height } = this.state;\r\n\r\n        return (\r\n\t    <div>\r\n              <div>\r\n\t\t<canvas ref=\"canvas\" width={ width } height={ height } />\r\n              </div>\r\n            </div>\r\n\t);\t\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}