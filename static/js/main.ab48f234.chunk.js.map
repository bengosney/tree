{"version":3,"sources":["Noise.js","Context.js","noisyLine.js","Petal.js","Flower.js","Tree.js","App.js","serviceWorker.js","index.js"],"names":["noiseMap","OpenSimplexNoise","Date","now","Math","random","Noise","length","range","arguments","undefined","radius","seed","Object","classCallCheck","this","noise","a","r","start","xOffset","floor","findStart","reset","value","r1","r2","PI","y1","y2","y","theta","atan2","prev","get","smallestAngle","Number","MAX_SAFE_INTEGER","bestStart","i","cur","angle","abs","step","x","cos","sin","scale","noise2D","Context","ctx","height","width","OffscreenCanvas","getContext","noisyLine","x1","x2","f","sqrt","getAngle","noiseShape","noiseDetail","yOffset","amplitude","setRange","frequency","setRadius","cx","cy","radians","ax","ay","callback","moveTo","n","_x","_y","_this$rotate","rotate","lineTo","Petal","pointOnArc","radianAngle","pointOn","per","m","p1","p2","e1","e2","grd","createRadialGradient","addColorStop","beginPath","bezierCurveTo","fillStyle","shadowColor","shadowBlur","fill","Flower","min","max","rot","petalRadius","point","draw","Tree","getLength","randomRange","drawLimb","level","line","lineWidth","strokeStyle","stroke","_draw","aMod","tx","ty","nx","ny","limbs","diff","App","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","pixelSize","lenth","drawing","updateWindowDimensions","bind","assertThisInitialized","startts","getTS","_this2","canvas","refs","set","alpha","rAF","requestAnimationFrame","updateAnimationState","window","addEventListener","_this3","_document$documentEle","document","documentElement","clientWidth","clientHeight","setState","initObjects","nextFrame","cancelAnimationFrame","removeEventListener","ts","clearFrame","_this4","setTimeout","_this$state","_width","fillRect","getTime","_this$state2","renderElements","tree","push","map","e","_this5","_this$state3","react_default","createElement","className","onClick","disabled","ref","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ab48f234.chunk.js","sourcesContent":["import OpenSimplexNoise from 'open-simplex-noise';\n\nconst noiseMap = new OpenSimplexNoise(Date.now() + Math.random());\n\nclass Noise {\n    constructor(length, range = [1, 100], radius = 2, seed = null) {\n\tthis.noise = noiseMap;\n\tthis.length = length;\n\tthis.a = 0;\n\tthis.range = range;\n\tthis.r = radius;\n\n\tthis.start = null;\n\n\tthis.xOffset = seed || Math.floor(Math.random() * 100000);\n\t\n\tthis.findStart();\n\tthis.reset();\n    }\n\n    setRange(range) {\n\tthis.range = range;\n    }\n\n    setRadius(radius) {\n\tthis.radius = radius;\n    }\n\n    scale( value, r1, r2 ) { \n\treturn (value - r1[0]) * (r2[1] - r2[0]) / (r1[1] - r1[0]) + r2[0];\n    }\n\n    reset() {\n\tthis.a = this.start;\n    }\n\n    step() {\n\treturn (Math.PI * 2) / this.length;\n    }\n\n    angle(y1, y2) {\n\tconst y = y1 - y2;\n\tconst x = 10;\n\tlet theta = Math.atan2(y, x);\n\ttheta *= 180 / Math.PI;\n\n\treturn theta;\n    }\n\n    findStart() {\n\t// TODO: Make this better, I think it needs to look over more points\n\tif (this.start === null) {\n\t    let prev = this.get();\n\t    \n\t    let smallestAngle = Number.MAX_SAFE_INTEGER;\n\t    let bestStart = 0;\n\t    \n\t    for (let i = 0 ; i < this.length ; i++) {\n\t\tconst cur = this.get();\n\t\tconst angle = Math.abs(this.angle(prev, cur));\n\t\t\n\t\tif (angle < smallestAngle) {\n\t\t    smallestAngle = angle;\n\t\t    bestStart = this.a  - (this.step() * 2);\n\t\t}\n\t\t\n\t\tprev = cur;\n\t    }\n\t    \n\t    this.start = bestStart;\n\t}\n    }\n\n    get() {\n\tconst step = this.step();\n\t\n\tconst { r, a } = this;\n\tconst x = r * Math.cos(a);\n\tconst y = r * Math.sin(a);\n\n\tthis.a += step;\n\n\treturn this.scale(this.noise.noise2D(x + this.xOffset, y), [0, 1], this.range);\n    }\n}\n\n\nexport default Noise;\n","class Context {\n    static get() {\n\treturn this.ctx;\n    }\n\n    static set(ctx) {\n\tthis.ctx = ctx;\n    }\n\n    static getOffscreen(height, width) {\n\tconst oc = new OffscreenCanvas(height, width);\n\n\treturn oc.getContext('2d');\n    }\n}\n\nContext.ctx = null;\n\nexport default Context;\n","import Noise from './Noise';\nimport Context from './Context';\n\nclass noisyLine {\n    constructor(x1, y1, x2, y2,  a = 100, f = 2) {\n\tconst x = x1 - x2;\n\tconst y = y1 - y2;\n\n\tthis.length = Math.abs(Math.sqrt( x*x + y*y ));\n\tthis.angle = this.getAngle(x1, y1, x2, y2);\n\n\tthis.noiseShape = new Noise(this.length, [0, a], f);\n\tthis.noiseDetail = new Noise(this.length, [0, Math.floor(a/5)], Math.floor(f * 5));\n\n\tthis.x1 = x1;\n\tthis.y1 = y1;\n\tthis.x2 = x2;\n\tthis.y2 = y2;\n\n\tthis.yOffset = null;\n    }\n\n    setAmplitude(amplitude) {\n\tthis.noise.setRange([0, amplitude]);\n    }\n\n    setFrequency(frequency) {\n\tthis.noise.setRadius(frequency);\n    }\n\n    getAngle(x1, y1, x2, y2) {\n\tconst y = y1 - y2;\n\tconst x = x1 - x2;\n\tconst theta = Math.atan2(x, y) * (180 /Math.PI);\n\n\treturn theta + 90;\n    }\n\n    rotate(cx, cy, x, y, angle) {\n\tconst radians = (Math.PI / 180) * angle;\n        const cos = Math.cos(radians);\n        const sin = Math.sin(radians);\n\t\n        const ax = (cos * (x - cx)) + (sin * (y - cy)) + cx;\n        const ay = (cos * (y - cy)) - (sin * (x - cx)) + cy;\n\t\n\treturn {ax: ax, ay: ay};\n    }\n    \n    draw(callback = null) {\n\tconst ctx = Context.get();\n\tconst { noiseShape, noiseDetail, x1, y1 } = this;\n\tconst y = y1;\n\n\t\n\tnoiseShape.reset();\n\tnoiseDetail.reset();\n\tctx.moveTo(x1, y1);\n\n\tlet yOffset = null;\n\t\n\tfor (let x = 0 ; x <= this.length; x++) {\n\t    const n = noiseShape.get() + noiseDetail.get();\n\t    yOffset = yOffset || n;\t  \n\t    \n\t    const _x = x + x1;\n\t    const _y = (y + n) - yOffset;\n\t    const { ax, ay } = this.rotate(x1, y1, _x, _y, this.angle);\n\t    ctx.lineTo(ax, ay);\n\n\t    if (callback !== null) {\n\t\tcallback(ax, ay);\n\t    }\n\t}\n    }\n}\n\nexport default noisyLine;\n","import Context from './Context';\n\nclass Petal {\n    constructor(x, y, radius, cx, cy) {\n\tthis.x = x;\n\tthis.y = y;\n\tthis.radius = radius;\n\tthis.cx = cx;\n\tthis.cy = cy;\n    }\n\n    draw() {\n\tconst ctx = Context.get();\n\tconst { x, y, radius, cx, cy } = this;\n\n\tconst pointOnArc = (cx,cy,radius,radianAngle) => {\n\t    const x = cx + radius * Math.cos(radianAngle);\n\t    const y = cy + radius * Math.sin(radianAngle);\n\n\t    return [x, y];\n\t};\n\n\tconst pointOn = (x1, y1, x2, y2, per) => {\n\t    return [x1 + (x2 - x1) * per, y1 + (y2 - y1) * per];\n\t};\n\n\tconst a = Math.atan2(y - cy, x - cx);\n\tconst m = 90 * (Math.PI / 180);\n\n\tconst r = radius;\n\n\tconst p1 = pointOnArc(x, y, r, a - m);\n\tconst p2 = pointOnArc(x, y, r, a + m);\n\n\tconst ep = 5;\n\tconst e1 = pointOn(cx, cy, p1[0], p1[1], ep);\n\tconst e2 = pointOn(cx, cy, p2[0], p2[1], ep);\n\n\tconst mainColour = '#fedee2';\n\tconst fadeColour = '#ffe8eb';\n\tconst grd = ctx.createRadialGradient(cx, cy, r * 2, cx, cy, 0);\n\n\tgrd.addColorStop(0, mainColour);\n\tgrd.addColorStop(0.75, fadeColour);\n\t\n\t\n\tctx.beginPath();\n\tctx.moveTo(cx, cy);\n\tctx.lineTo(p1[0], p1[1]);\n\tctx.bezierCurveTo(e1[0], e1[1], e2[0], e2[1], p2[0], p2[1]);\n\tctx.lineTo(cx, cy);\n\t\n\tctx.fillStyle = grd;\n\tctx.shadowColor = \"rgba(0, 0, 0, .075)\";\n\tctx.shadowBlur = radius * 3;\n\tctx.fill();\n    }\n}\n\nexport default Petal;\n","import Petal from './Petal';\n\nclass Flower {\n    constructor(x, y, radius) {\n\tthis.x = x;\n\tthis.y = y;\n\tthis.radius = radius;\n    }\n\n    draw() {\n\tconst { x, y, radius } = this;\t\n\n\tconst rot = (cx, cy, x, y, angle) => {\n\t    const radians = (Math.PI / 180) * angle;\n\t    const cos = Math.cos(radians);\n\t    const sin = Math.sin(radians);\n\t    const nx = (cos * (x - cx)) + (sin * (y - cy)) + cx;\n\t    const ny = (cos * (y - cy)) - (sin * (x - cx)) + cy;\n\t    \n\t    return [nx, ny];\n\t};\n\n\tconst randomRange = (min, max) => {\n\t    return min + Math.random() * (max - min);\n\t};\n\n\tconst petalCount = 5;\n\tconst petalRadius = radius / 4;\n\tconst petalRot = 360 / petalCount;\n\n\n\tlet point = rot(x, y, x, y + petalRadius, randomRange(0, 360));\n\t\n\tfor (let i = 0; i < petalCount; i++) {\n\t    const petal = new Petal(point[0], point[1], petalRadius, x, y);\n\t    petal.draw();\n\t    \n\t    point = rot(x, y, point[0], point[1], petalRot);\n\t}\n    }\n}\n\nexport default Flower;\n","import Context from './Context';\nimport noisyLine from './noisyLine';\nimport Flower from './Flower';\n\nclass Tree {\n    constructor(x, y, width, height) {\n\tthis.x = x;\n\tthis.y = y;\n\tthis.width = width;\n\tthis.height = height;\n    }\n\n    draw() {\n\tconst { x, y, height } = this;\n\tconst ctx = Context.get();\n\n\tlet cx = x;\n\tlet cy = y;\n\n\tconst maxLevels = 4;\n\n\tconst getLength = (x1, y1, x2, y2) => {\n\t    const x = x1 - x2;\n\t    const y = y1 - y2;\n\t    \n\t    return Math.abs(Math.sqrt( x*x + y*y ));\n\t};\n\n\tconst randomRange = (min, max) => {\n\t    return min + Math.random() * (max - min);\n\t};\n\n\tconst getAngle = (x1, y1, x2, y2) => {\n\t    const y = y1 - y2;\n\t    const x = x1 - x2;\n\t    const theta = Math.atan2(x, y) * (180 / Math.PI);\n\t    \n\t    return theta + 90;\n\t};\n\n\tconst s = .45;\n\n\tconst drawLimb = (x1, y1, x2, y2, level = 0) => {\n\t    const length = getLength(x1, y1, x2, y2);\n\t    const line = new noisyLine(x1, y1, x2, y2, 10, (length / 500));\n\n\t    const lineWidth = maxLevels - level;\n\t    \n\t    ctx.beginPath();\n\t    line.draw();\n\t    ctx.strokeStyle = '#3d3d3d';\n\t    ctx.lineWidth = lineWidth;\n\t    ctx.shadowColor = \"rgba(0, 0, 0, .1)\";\n\t    ctx.shadowBlur = lineWidth * 2;\n\t    ctx.stroke();\t  \n\t    \n\t    if (level <= maxLevels) {\n\t\tconst _draw = (aMod) => {\n\t\t    const cx = x2;\n\t\t    const cy = y2;\n\t\t    const length = getLength(x1, y1, x2, y2) * (s + randomRange(0, .2));\n\t\t    \n\t\t    const tx = x2;\n\t\t    const ty = y2 + (length * randomRange(1, .5));\n\t\t    const ca = getAngle(x1, y1, x2, y2);\n\t\t    const a = ((ca - 90) + aMod + randomRange(-15, 15)) * (Math.PI / 180);\n\t\t    const nx = Math.cos(a) * (tx - cx) - Math.sin(a) * (ty - cy) + cx;\n\t\t    const ny = Math.sin(a) * (tx - cx) - Math.cos(a) * (ty - cy) + cy;\n\n\t\t    drawLimb(cx, cy, nx, ny, level + 1);\n\n\t\t    if (level === maxLevels) {\n\t\t\tconst flower = new Flower(nx, ny, randomRange(3, 6));\n\t\t\tflower.draw();\n\t\t    }\n\t\t};\n\n\t\tconst m = .2;\n\t\tconst minLimbs = 2;\n\t\tconst maxLimbs = 5;\n\n\t\tconst limbs = level === 0 ? maxLimbs : randomRange(minLimbs, maxLimbs);\n\t\tconst diff = 90 / (limbs - 1);\n\t\tfor (let i = 0 ; i < limbs ; i++) {\n\t\t    const a = -45 + (diff * i) * randomRange(1 + m, 1 - m);\n\t\t    _draw(a);\n\t\t}\n\t    }\n\t};\n\n\tconst flowerOnly = false;\n\tif (flowerOnly) {\n\t    const f = new Flower(cx, cy / 2, height / 2);\n\t    f.draw();\n\t} else {\n\t    drawLimb(cx, cy, cx, cy - (height * s));\n\t}\n    }    \n}\n\nexport default Tree;\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Noise from './Noise';\nimport Tree from './Tree';\n\nimport Context from './Context';\n\nclass App extends Component {\n    constructor(props) {\n\tsuper(props);\n\n\tthis.state = {\n\t    pixelSize: 8,\n\t    height: 500,\n\t    width: 150,\n\t    lenth: 100,\n\t    range: 20,\n\t    yOffset: null,\n\t    drawing: true\n\t};\n\t\n\tthis.drawing = false;\n\tthis.ctx = null;\n\tthis.line = \n\n\tthis.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n\tthis.startts = this.getTS();\n    }\n\n    \n    componentDidMount() {\n\tconst canvas = this.refs.canvas;\n\tContext.set(canvas.getContext(\"2d\", { alpha: false }));\n\n\t\n\tthis.rAF = requestAnimationFrame(() => this.updateAnimationState());\n\tthis.updateWindowDimensions();\n\twindow.addEventListener('resize', this.updateWindowDimensions);\n    }\n    \n    updateWindowDimensions() {\n\tconst { clientWidth, clientHeight } = document.documentElement;\n\tconst { range } = this.state;\n\n\tconst length = Math.floor(clientWidth / 2);\n\tconst noise = new Noise(length, [-range, range]);\n\n\tthis.setState({ width: clientWidth, height: clientHeight, noise: noise, length: length }, () => {\n\t    this.initObjects();\n\t    this.nextFrame();\n\t});\n    }\n    \n    componentWillUnmount() {\n\tcancelAnimationFrame(this.rAF);\n\twindow.removeEventListener('resize', this.updateWindowDimensions);\n    }\n\n    updateAnimationState() {\n\tthis.ts = this.getTS();\n\tthis.clearFrame();\n\n\tthis.draw();\n\n\tthis.setState({ drawing: false });\n    }\n\n    nextFrame() {\n\tthis.setState({ drawing: true });\n\tsetTimeout(() => {\n\t    this.rAF = requestAnimationFrame(() => this.updateAnimationState());\n\t}, 100);\n    }\n\n    clearFrame() {\n\tconst { width, height } = this.state;\n\tconst ctx = Context.get();\n\n\tconst light = '#d1f2e8';\n\tconst dark = '#6d7580';\n\n\tconst _width = Math.max(750, width);\n\tconst grd = ctx.createRadialGradient(0, 0, _width, width / 2, height / 2, 0);\n\n\tgrd.addColorStop(1, light);\n\tgrd.addColorStop(0, dark);\n\t\n\tctx.fillStyle = grd;\n\tctx.fillRect(0, 0, width, height);\n    }\n\n    getTS() {\n\tconst date = new Date();\n\t\n\treturn date.getTime();\n    }\n\n    scale( value, r1, r2 ) { \n\treturn ( value - r1[ 0 ] ) * ( r2[ 1 ] - r2[ 0 ] ) / ( r1[ 1 ] - r1[ 0 ] ) + r2[ 0 ];\n    }\n\n    initObjects() {\n\tconst { width, height } = this.state;\n\tconst renderElements = [];\n\tconst tree = new Tree(width / 2, height * .9, width * .8, height * .8);\n\n\trenderElements.push(tree);\n\t\n\tthis.renderElements = renderElements;\n    }\n\n    draw() {\n\tthis.renderElements.map(e => e.draw());\n    }\n        \n    render() {\n\tconst { width, height, drawing } = this.state;\n\n        return (\n\t    <div className={ drawing ? 'drawing' : '' }>\n\t      <button onClick={ () => this.nextFrame() } disabled={ drawing } className=\"newTree\" >New Tree</button>\n\t      <div>\n\t\t<canvas ref=\"canvas\" width={ width } height={ height } />\n              </div>\n            </div>\n\t);\t\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}